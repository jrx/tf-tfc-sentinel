# This policy uses the tfconfig/v2 import to require modules to have
# version constraint, this is a good practise.
import "tfconfig-functions" as config

# Allowed module versions
checked_modules = {
    "app.terraform.io/jrx/rds/aws": "0.0.1",
    "app.terraform.io/jrx/s3/aws":  "0.0.1",
}

# Get all modules
allModuleCalls = config.find_all_module_calls()

# Iterate over the allowed versions map
violations = 0

for checked_modules as source, version {

    print(source)
    print(version)

    checkedModuleCalls = config.filter_attribute_in_list(
        allModuleCalls,
        "source",
        source,
        false)

    
    violatingModuleCalls = config.filter_attribute_not_in_list(
        checkedModuleCalls["items"],
        "version_constraint",
        version,
        true)

    violations = violations + length(violatingModuleCalls["messages"])
    print(violations)
}

# Main rule
main = rule {
    violations is 0
}